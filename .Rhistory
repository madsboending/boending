avg <- aggregate( formula=adjsqmeterprice~salgsaar, data=dup, FUN=mean , na.rm=T)
#Excluding year 2015
avg1 <- avg[1:23,]
aplot <- ggplot(dup, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+ theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4))
aplot
#####################################################################
#                                                                   #
#                 Subsetting to obtain building plots               #
#                                                                   #
#####################################################################
#
g <- dup[which(dup$Built-dup$salgsaar>=0 & dup$Price<=1500000),]
# store data in GeoJSON file (just a subset here)
g.dat <- toGeoJSON(data=g[1:214,], dest=tempdir(), name="plot", overwrite =T)
# make style based on 2014-prices
g.style <- styleCat(prop="Percentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-prices",fill.alpha=0.7, rad=8)
# create map, remember to 'incl.data=TRUE' to embed on website
g.map <- leaflet(data=g.dat,size=c(700,500), dest=tempdir(), title="salepriser svenstrup", base.map=list("osm",'mqsat', 'tls'), style=g.style, popup='*', incl.data=TRUE)
# view map in browser
g.map
#####################################################################
#                                                                   #
#                         Plotting maps                             #
#                                                                   #
#####################################################################
# store data in GeoJSON file (just a subset here)
m.dat <- toGeoJSON(data=dup[1:1577,], dest=tempdir(), name="sale", overwrite =T)
# make style based on percentile, 2014-prices
m.style <- styleCat(prop="Percentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-prices",fill.alpha=0.7, rad=8)
# create map, remember to 'incl.data=TRUE' to embed on website
m.map <- leaflet(data=m.dat,size=c(700,500), dest=tempdir(), title="2014-price", base.map=list("osm"), style=m.style, popup='*', incl.data=TRUE)
# view map in browser
m.map
# make style based on kr/sq.meters, 2014-prices
m.style1 <- styleCat(prop="sqPercentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-kr/sq.meters",fill.alpha=0.7, rad=8)
# create map, remember to 'incl.data=TRUE' to embed on website
m.map1 <- leaflet(data=m.dat,size=c(700,500), dest=tempdir(), title="2014-price pr. sq.meter", base.map="osm", style=m.style1, popup='*', incl.data=TRUE)
# view map in browser
m.map1
View(avg1)
View(avg)
View(avg1)
View(my)
View(m)
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+ theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4))
aplot
View(avg1)
?theme
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+ theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4))+theme(plot.margin = unit(c(1,1,1,1), "cm"))
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+ theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4))+theme(plot.margin =c(1,1,1,1), "cm"))
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+ theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4)+theme(plot.margin =c(1,1,1,1), "cm"))
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+ theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4)+theme(plot.margin=unit(c(1,1,1,1), "cm"))
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+ theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4)+theme(plot.margin=unit(c(1,1,1,1), "cm")))
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+ theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4)+theme(plot.margin=unit(c(1,1,1,1), "cm"))))
aplot+xlim(0,max)
?xlim
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4)+xlim(0,max)
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+xlim(0,max)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4)
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4)+scale_x_discrete(breaks = c(1,10,20))
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+ + scale_x_discrete(breaks = c(1,10,20))+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4)
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+ + scale_x_discrete(breaks = c(1,10,20))+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+scale_x_discrete(breaks = c(1,10,20))+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))
aplot
?scale_x_discrete
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+scale_x_discrete(breaks = c(1,1,2))+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+scale_x_discrete(breaks = c(,1,2))+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))
?breaks
??breaks
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+scale_x_discrete(breaks = c(23,1,1))+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+scale_x_discrete(breaks = c(23,23,23))+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))
aplot
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+scale_x_discrete(breaks = "salgsaar")+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+scale_x_discrete()+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=60, vjust=0.4))
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=90, vjust=0.4))
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.8))
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))+scale_x_continuous(limits=c(1992, 2014))
aplot
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))+scale_x_continuous(breaks=c(1992, 2014))
aplot
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))+scale_x_continuous(breaks=c(1992:2014))
aplot
splot
aplot
?theme
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))+scale_x_continuous(breaks=c(1992:2014))+theme(panel.grid.minor.x = element_blank())
aplot
splot
aplot
adresser.9230 <- read.csv("C:/Users/Mads/Dropbox/Boligdata 270415/adresser 9230.csv", sep=";")
View(adresser.9230)
salgspriser.9230 <- read.csv("C:/Users/Mads/Dropbox/Boligdata 270415/salgspriser 9230.csv", sep=";")
View(salgspriser.9230)
salg <- salgspriser.9230
adr <- adresser.9230
m <- merge(adr, salg, by = "adresse", all=F)
#devtools::install_github('chgrl/leafletR')
library(leafletR)
#####################################################################
#                                                                   #
#                      Data manipulation                            #
#                                                                   #
#####################################################################
#inflationsindeks fra http://www.dst.dk/da/Statistik/emner/prisindeks/forbrugerprisindeks-og-aarlig-inflation.aspx
a92 <- 6860/4445 #1992
a93 <- 6860/4500 #1993
a94 <- 6860/4590#1994
a95 <- 6860/4686#1995
a96 <- 6860/4785#1996
a97 <- 6860/4890#1997
a98 <- 6860/4980#1998
a99 <- 6860/5104#1999
a00 <- 6860/5253#2000
a01 <- 6860/5377#2001
a02 <- 6860/5507#2002
a03 <- 6860/5622#2003
a04 <- 6860/5687#2004
a05 <- 6860/5790#2005
a06 <- 6860/5900#2006
a07 <- 6860/6001#2007
a08 <- 6860/6205#2008
a09 <- 6860/6287#2009
a10 <- 6860/6432#2010
a11 <- 6860/6609#2011
a12 <- 6860/6768#2012
a13 <- 6860/6821#2013
a14 <- 6860/6860#2014
m$adjprice <- ifelse(m$salgsaar == '1992', m$pris*a92, ifelse(m$salgsaar == '1993', m$pris*a93, ifelse(m$salgsaar == '1994', m$pris*a94, ifelse(m$salgsaar == '1995', m$pris*a95, ifelse(m$salgsaar == '1996', m$pris*a96, ifelse(m$salgsaar == '1997', m$pris*a97, ifelse(m$salgsaar == '1998', m$pris*a98, ifelse(m$salgsaar == '1999', m$pris*a99, ifelse(m$salgsaar == '2000', m$pris*a00, ifelse(m$salgsaar == '2001', m$pris*a01, ifelse(m$salgsaar == '2002', m$pris*a02, ifelse(m$salgsaar == '2003', m$pris*a03, ifelse(m$salgsaar == '2004', m$pris*a04, ifelse(m$salgsaar == '2005', m$pris*a05, ifelse(m$salgsaar == '2006', m$pris*a06, ifelse(m$salgsaar == '2007', m$pris*a07, ifelse(m$salgsaar == '2008', m$pris*a08, ifelse(m$salgsaar == '2009', m$pris*a09, ifelse(m$salgsaar == '2010', m$pris*a10, ifelse(m$salgsaar == '2011', m$pris*a11, ifelse(m$salgsaar == '2011', m$pris*a11, ifelse(m$salgsaar == '2012', m$pris*a12, ifelse(m$salgsaar == '2013', m$pris*a13, ifelse(m$salgsaar == '2014', m$pris*a14, m$pris))))))))))))))))))))))))
m$adjsqmeterprice <- m$adjprice/m$kvm
#rund adjprice af uden decimaltal
m$adjprice <- round(m$adjprice, digits=0)
#rund 2014-kr/sq.meters af uden decimaltal
m$adjsqmeterprice <- round(m$adjsqmeterprice, digits=0)
View(m)
m2 <- m[which(m$bygget-m$salgsaar<0 & m$pris>1500000),]
my <- m2[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
library(plyr)
my <- rename(my, c(adresse="Address", pris='Price', prischng='Price-reduction',adjprice='2014-price',kvm='Sq.meters', kr.kvm='Kr/sq.meters', dato='Sales date', bygget='Built', rum='Rooms', boligtype='Housing type'))
dup <- my[!duplicated(my[,"Address"]),]
View(dup)
m2 <- m[which(m$salgsaar-m$bygget>0),]
my <- m2[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
my <- rename(my, c(adresse="Address", pris='Price', prischng='Price-reduction',adjprice='2014-price',kvm='Sq.meters', kr.kvm='Kr/sq.meters', dato='Sales date', bygget='Built', rum='Rooms', boligtype='Housing type'))
dup <- my[!duplicated(my[,"Address"]),]
#subset data så 'my' kun indeholder koordinater og pris
my <- m2[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
#Omdøb til engelske navne
library(plyr)
my <- rename(my, c(adresse="Address", pris='Price', prischng='Price-reduction',adjprice='2014-price',kvm='Sq.meters', kr.kvm='Kr/sq.meters', dato='Sales date', bygget='Built', rum='Rooms', boligtype='Housing type'))
#fjern dubletter fra 'my' i kolonnen 'adresse'
dup <- my[!duplicated(my[,"Address"]),]
#Find percentiles i '2014-price'
quantile(dup$'2014-price', probs = c(0, 0.25, 0.75, 0.90, 1), na.rm = T)
#Lav en ny variabel baseret på percentile af 2014-price
dup$Percentile <- ifelse(dup$'2014-price'>= 0 & dup$'2014-price'<=865223, '0-25%', ifelse(dup$'2014-price'> 865223 & dup$'2014-price'<=1745825, '25-75%',ifelse(dup$'2014-price'>1745825 & dup$'2014-price'<=2271926, '75-90%',ifelse(dup$'2014-price'>2271926 & dup$'2014-price'<=18575000, '90-100%',0))))
#Find percentiles i 'adjsqmeterprice'
quantile(dup$adjsqmeterprice, probs = c(0, 0.25, 0.75, 0.90, 1), na.rm = T)
#Lav en ny variabel baseret på percentile af 2014-kr/sq.meters
dup$sqPercentile <- ifelse(dup$adjsqmeterprice>= 0 & dup$adjsqmeterprice<=6151.5, '0-25%', ifelse(dup$adjsqmeterprice> 6151.5 & dup$adjsqmeterprice<=12373.5, '25-75%',ifelse(dup$adjsqmeterprice>12373.5 & dup$adjsqmeterprice<=15536, '75-90%',ifelse(dup$adjsqmeterprice>12536 & dup$adjsqmeterprice<=132348, '90-100%',0))))
#####################################################################
#                                                                   #
#                 Number of sales per year                          #
#                                                                   #
#####################################################################
y <- data.frame(table(dup$salgsaar))
#Excluding year 2015
y1 <- y[1:23,]
library(ggplot2)
splot <- ggplot(y1, aes(x=Var1, y=Freq, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Antal boligsalg pr. år i 9230')+xlab('År')+ylab('Antal salg')+ theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4))
splot
#Opret ny variable som udregner gennemsnitlig kvm pris for hvert år
#Lav først 2014-kr/sq.meters om til numerisk variable
dup$adjsqmeterprice <- as.numeric(dup$adjsqmeterprice)
#Udregn gennemsnitlig kvm pris for hvert år
avg <- aggregate( formula=adjsqmeterprice~salgsaar, data=dup, FUN=mean , na.rm=T)
#Excluding year 2015
avg1 <- avg[1:23,]
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))+scale_x_continuous(breaks=c(1992:2014))+theme(panel.grid.minor.x = element_blank())
aplot
#####################################################################
#                                                                   #
#                 Subsetting to obtain building plots               #
#                                                                   #
#####################################################################
#
g <- dup[which(dup$Built-dup$salgsaar>=0 & dup$Price<=1500000),]
# store data in GeoJSON file (just a subset here)
g.dat <- toGeoJSON(data=g[1:214,], dest=tempdir(), name="plot", overwrite =T)
# make style based on 2014-prices
g.style <- styleCat(prop="Percentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-prices",fill.alpha=0.7, rad=8)
# create map, remember to 'incl.data=TRUE' to embed on website
g.map <- leaflet(data=g.dat,size=c(700,500), dest=tempdir(), title="salepriser svenstrup", base.map=list("osm",'mqsat', 'tls'), style=g.style, popup='*', incl.data=TRUE)
# view map in browser
g.map
#####################################################################
#                                                                   #
#                         Plotting maps                             #
#                                                                   #
#####################################################################
# store data in GeoJSON file (just a subset here)
m.dat <- toGeoJSON(data=dup[1:1577,], dest=tempdir(), name="sale", overwrite =T)
# make style based on percentile, 2014-prices
m.style <- styleCat(prop="Percentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-prices",fill.alpha=0.7, rad=8)
# create map, remember to 'incl.data=TRUE' to embed on website
m.map <- leaflet(data=m.dat,size=c(700,500), dest=tempdir(), title="2014-price", base.map=list("osm"), style=m.style, popup='*', incl.data=TRUE)
# view map in browser
m.map
# make style based on kr/sq.meters, 2014-prices
m.style1 <- styleCat(prop="sqPercentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-kr/sq.meters",fill.alpha=0.7, rad=8)
# create map, remember to 'incl.data=TRUE' to embed on website
m.map1 <- leaflet(data=m.dat,size=c(700,500), dest=tempdir(), title="2014-price pr. sq.meter", base.map="osm", style=m.style1, popup='*', incl.data=TRUE)
# view map in browser
m.map1
g <- m[which(m$bygget-m$salgsaar>=0 & m$pris<=1500000),]
View(g)
g.dup <- g[!duplicated(g[,"adresse"]),]
g.dat <- toGeoJSON(data=g.dup[1:214,], dest=tempdir(), name="plot", overwrite =T)
g.style <- styleCat(prop="Percentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-prices",fill.alpha=0.7, rad=8)
g.map <- leaflet(data=g.dat,size=c(700,500), dest=tempdir(), title="salepriser svenstrup", base.map=list("osm",'mqsat', 'tls'), style=g.style, popup='*', incl.data=TRUE)
g.map
View(g.dup)
g.dup <- g.dup[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
g.dat <- toGeoJSON(data=g.dup[1:214,], dest=tempdir(), name="plot", overwrite =T)
g.style <- styleCat(prop="Percentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-prices",fill.alpha=0.7, rad=8)
g.map <- leaflet(data=g.dat,size=c(700,500), dest=tempdir(), title="salepriser svenstrup", base.map=list("osm",'mqsat', 'tls'), style=g.style, popup='*', incl.data=TRUE)
g.map
quantile(g.dup$adjsqmeterprice, probs = c(0, 0.25, 0.75, 0.90, 1), na.rm = T)
quantile(g.dup$adjprice, probs = c(0, 0.25, 0.75, 0.90, 1), na.rm = T)
g.dup$Percentile <- ifelse(g.dup$adjprice>= 0 & g.dup$adjprice<=434894, '0-25%', ifelse(g.dup$adjprice> 434894 & g.dup$adjprice<=785233.8, '25-75%',ifelse(g.dup$adjprice>785233.8 & g.dup$adjprice<=959745.4, '75-90%',ifelse(g.dup$adjprice>959745.4 & g.dup$adjprice<=2024940, '90-100%',0))))
g.dat <- toGeoJSON(data=g.dup[1:214,], dest=tempdir(), name="plot", overwrite =T)
g.style <- styleCat(prop="Percentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-prices",fill.alpha=0.7, rad=8)
g.map <- leaflet(data=g.dat,size=c(700,500), dest=tempdir(), title="salepriser svenstrup", base.map=list("osm",'mqsat', 'tls'), style=g.style, popup='*', incl.data=TRUE)
g.map
m2 <- m[which(m$salgsaar-m$bygget>=0 & m$pris>=1500000),]
m2 <- m[which(m$salgsaar-m$bygget>=0 & m$pris>1500000),]
m2 <- m[which(m$salgsaar-m$bygget>=0 & m$pris>=1500000),]
my <- m2[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
my <- rename(my, c(adresse="Address", pris='Price', prischng='Price-reduction',adjprice='2014-price',kvm='Sq.meters', kr.kvm='Kr/sq.meters', dato='Sales date', bygget='Built', rum='Rooms', boligtype='Housing type'))
dup <- my[!duplicated(my[,"Address"]),]
m2 <- m[which(m$salgsaar-m$bygget>=0),]
my <- m2[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
my <- rename(my, c(adresse="Address", pris='Price', prischng='Price-reduction',adjprice='2014-price',kvm='Sq.meters', kr.kvm='Kr/sq.meters', dato='Sales date', bygget='Built', rum='Rooms', boligtype='Housing type'))
dup <- my[!duplicated(my[,"Address"]),]
m2 <- m[which(m$salgsaar-m$bygget>=0  & m$pris<=1500000),]
my <- m2[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
my <- rename(my, c(adresse="Address", pris='Price', prischng='Price-reduction',adjprice='2014-price',kvm='Sq.meters', kr.kvm='Kr/sq.meters', dato='Sales date', bygget='Built', rum='Rooms', boligtype='Housing type'))
dup <- my[!duplicated(my[,"Address"]),]
m2 <- m[which(m$salgsaar-m$bygget>=0  & m$pris<1500000),]
my <- m2[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
my <- rename(my, c(adresse="Address", pris='Price', prischng='Price-reduction',adjprice='2014-price',kvm='Sq.meters', kr.kvm='Kr/sq.meters', dato='Sales date', bygget='Built', rum='Rooms', boligtype='Housing type'))
dup <- my[!duplicated(my[,"Address"]),]
m2 <- m[which(m$salgsaar-m$bygget>=0  & m$pris>=1500000),]
m2 <- m[which(m$salgsaar-m$bygget>=0  & m$pris>=1500000),]
m2 <- m[which(m$salgsaar-m$bygget>=0),]
my <- m2[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
my <- rename(my, c(adresse="Address", pris='Price', prischng='Price-reduction',adjprice='2014-price',kvm='Sq.meters', kr.kvm='Kr/sq.meters', dato='Sales date', bygget='Built', rum='Rooms', boligtype='Housing type'))
dup <- my[!duplicated(my[,"Address"]),]
m <- m[!duplicated(m[,"adresse"]),]
m2 <- m[which(m$salgsaar-m$bygget>=0),]
my <- m2[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
my <- rename(my, c(adresse="Address", pris='Price', prischng='Price-reduction',adjprice='2014-price',kvm='Sq.meters', kr.kvm='Kr/sq.meters', dato='Sales date', bygget='Built', rum='Rooms', boligtype='Housing type'))
m2 <- m[which(m$salgsaar-m$bygget>=0 & ifelse(m$salgsaar == '1992', m$pris*a92, ifelse),]
m2 <- m[which(m$salgsaar-m$bygget>=0 & ifelse(m$salgsaar == '1992', m$pris*a92, ifelse)),]
m2 <- m[which(m$salgsaar-m$bygget>=0 & ifelse(m$salgsaar == '1992', m$pris*a92, 0)),]
?if
?ifelse
m2 <- m[which(m$salgsaar-m$bygget>=0),]
ifelse(m$salgsaar-m$bygget=0 & m$pris>=1500000, m$pris*a92, 0)
m2 <- m[which(m$salgsaar-m$bygget=0 & m$pris>=1500000),]
m2 <- m[which(m$salgsaar-m$bygget==0 & m$pris>=1500000),]
m2 <- m[which(m$salgsaar-m$bygget==0 & m$pris>1500000),]
m2 <- m[which(m$salgsaar-m$bygget==0 & m$pris>1500000),]
m2 <- m[which(m$salgsaar-m$bygget==0 & m$pris=>1500000),]
m2 <- m[which(m$salgsaar-m$bygget==0 & m$pris>=1500000),]
getwd()
Alle.vip.deltagere <- read.csv("~/Alle vip deltagere.csv", sep=";")
View(Alle.vip.deltagere)
vip <- Alle.vip.deltagere
library(ggplot2)
str(vip$Eksternt.forbrug)
#Mean, Median, kvartiler, min, max
summary(vip$Eksternt.forbrug)
#Mean
mean(vip$Eksternt.forbrug, na.rm=T)
#Standard afvigelse
sd(vip$Eksternt.forbrug)
#Histogram af fordelingen
hist(vip$Eksternt.forbrug)
#ggplot2 Histogram af fordelingen
p1 <- ggplot(vip, aes(x=Eksternt.forbrug)) + geom_histogram(binwidth=5000, colour="black", fill="white")+geom_vline(aes(xintercept=mean(Eksternt.forbrug, na.rm=T)),color="red", linetype="dashed", size=1)+ylab('Frekvens')+xlab('Eksternt Forbrug, kr.')+ggtitle('Histogram af VIP deltagernes eksterne forbrug, 2009-2014')+scale_x_continuous(breaks=seq(0, 50000, 10000))+scale_y_continuous(breaks=seq(0, 250, 50))
p1
#Boxplot for hvert år
p2 <- ggplot(vip, aes(x=factor(deltagaar), y=Eksternt.forbrug)) + geom_boxplot()+stat_summary(fun.y=mean, geom="point", shape=5, size=4, color='red')+xlab('Deltagelsesår')+ylab('Eksternt Forbrug, kr.')+ggtitle('Boxplots af eksternt forbrug for hvert år, 2009-2014')
p2
table(vip$Eksternt.forbrug)
Alle.vip.deltagere <- read.csv("~/Alle vip deltagere.csv", sep=";")
View(Alle.vip.deltagere)
vip <- Alle.vip.deltagere
library(ggplot2)
str(vip$Eksternt.forbrug)
#Mean, Median, kvartiler, min, max
summary(vip$Eksternt.forbrug)
#Mean
mean(vip$Eksternt.forbrug, na.rm=T)
#Standard afvigelse
sd(vip$Eksternt.forbrug)
#Histogram af fordelingen
hist(vip$Eksternt.forbrug)
#ggplot2 Histogram af fordelingen
p1 <- ggplot(vip, aes(x=Eksternt.forbrug)) + geom_histogram(binwidth=5000, colour="black", fill="white")+geom_vline(aes(xintercept=mean(Eksternt.forbrug, na.rm=T)),color="red", linetype="dashed", size=1)+ylab('Frekvens')+xlab('Eksternt Forbrug, kr.')+ggtitle('Histogram af VIP deltagernes eksterne forbrug, 2009-2014')+scale_x_continuous(breaks=seq(0, 50000, 10000))+scale_y_continuous(breaks=seq(0, 250, 50))
p1
#Boxplot for hvert år
p2 <- ggplot(vip, aes(x=factor(deltagaar), y=Eksternt.forbrug)) + geom_boxplot()+stat_summary(fun.y=mean, geom="point", shape=5, size=4, color='red')+xlab('Deltagelsesår')+ylab('Eksternt Forbrug, kr.')+ggtitle('Boxplots af eksternt forbrug for hvert år, 2009-2014')
p2
table(vip$Eksternt.forbrug)
table(vip$deltagaar)
adresser.9230 <- read.csv("C:/Users/Mads/Dropbox/Boligdata 270415/adresser 9230.csv", sep=";")
View(adresser.9230)
salgspriser.9230 <- read.csv("C:/Users/Mads/Dropbox/Boligdata 270415/salgspriser 9230.csv", sep=";")
View(salgspriser.9230)
salg <- salgspriser.9230
adr <- adresser.9230
m <- merge(adr, salg, by = "adresse", all=F)
#devtools::install_github('chgrl/leafletR')
library(leafletR)
View(m)
names(m$ejerlavnavn)
names(m)
str(m)
levels(m$ejerlavnavn)
levels(m$sognenavn)
adresser.9230 <- read.csv("C:/Users/Mads/Dropbox/Boligdata 270415/adresser 9230.csv", sep=";")
View(adresser.9230)
salgspriser.9230 <- read.csv("C:/Users/Mads/Dropbox/Boligdata 270415/salgspriser 9230.csv", sep=";")
View(salgspriser.9230)
source('C:/Users/Mads/Dropbox/Boligdata 270415/salgspriser.R')
salg <- salgspriser.9230
adr <- adresser.9230
m <- merge(adr, salg, by = "adresse", all=F)
#devtools::install_github('chgrl/leafletR')
library(leafletR)
levels(m$ejerlavnavn)
levels(m$sognenavn)
#####################################################################
#                                                                   #
#                      Data manipulation                            #
#                                                                   #
#####################################################################
#Fjern alle handler i 2015 (12 handler), så vi kun kigger på perioden 1992-2014
m <- m[-which(m$salgsaar==2015),]
#fjern dubletter fra 'my' i kolonnen 'adresse'
m <- m[!duplicated(m[,"adresse"]),]
#Fjern de få observationer, hvor pris er missing
m <- m[complete.cases(m[,c(50)]),]
#inflationsindeks fra http://www.dst.dk/da/Statistik/emner/prisindeks/forbrugerprisindeks-og-aarlig-inflation.aspx
a92 <- 6860/4445 #1992
a93 <- 6860/4500 #1993
a94 <- 6860/4590#1994
a95 <- 6860/4686#1995
a96 <- 6860/4785#1996
a97 <- 6860/4890#1997
a98 <- 6860/4980#1998
a99 <- 6860/5104#1999
a00 <- 6860/5253#2000
a01 <- 6860/5377#2001
a02 <- 6860/5507#2002
a03 <- 6860/5622#2003
a04 <- 6860/5687#2004
a05 <- 6860/5790#2005
a06 <- 6860/5900#2006
a07 <- 6860/6001#2007
a08 <- 6860/6205#2008
a09 <- 6860/6287#2009
a10 <- 6860/6432#2010
a11 <- 6860/6609#2011
a12 <- 6860/6768#2012
a13 <- 6860/6821#2013
a14 <- 6860/6860#2014
m$adjprice <- ifelse(m$salgsaar == '1992', m$pris*a92, ifelse(m$salgsaar == '1993', m$pris*a93, ifelse(m$salgsaar == '1994', m$pris*a94, ifelse(m$salgsaar == '1995', m$pris*a95, ifelse(m$salgsaar == '1996', m$pris*a96, ifelse(m$salgsaar == '1997', m$pris*a97, ifelse(m$salgsaar == '1998', m$pris*a98, ifelse(m$salgsaar == '1999', m$pris*a99, ifelse(m$salgsaar == '2000', m$pris*a00, ifelse(m$salgsaar == '2001', m$pris*a01, ifelse(m$salgsaar == '2002', m$pris*a02, ifelse(m$salgsaar == '2003', m$pris*a03, ifelse(m$salgsaar == '2004', m$pris*a04, ifelse(m$salgsaar == '2005', m$pris*a05, ifelse(m$salgsaar == '2006', m$pris*a06, ifelse(m$salgsaar == '2007', m$pris*a07, ifelse(m$salgsaar == '2008', m$pris*a08, ifelse(m$salgsaar == '2009', m$pris*a09, ifelse(m$salgsaar == '2010', m$pris*a10, ifelse(m$salgsaar == '2011', m$pris*a11, ifelse(m$salgsaar == '2011', m$pris*a11, ifelse(m$salgsaar == '2012', m$pris*a12, ifelse(m$salgsaar == '2013', m$pris*a13, ifelse(m$salgsaar == '2014', m$pris*a14, m$pris))))))))))))))))))))))))
m$adjsqmeterprice <- m$adjprice/m$kvm
#rund adjprice af uden decimaltal
m$adjprice <- round(m$adjprice, digits=0)
#rund 2014-kr/sq.meters af uden decimaltal
m$adjsqmeterprice <- round(m$adjsqmeterprice, digits=0)
#fjern dubletter fra 'm' i kolonnen 'adresse'
m <- m[!duplicated(m[,"adresse"]),]
#Subset data så byggegrunde udelades. Alle handler hvor byggeåret er størrer end salgsåret og prisen er under 1,5 mio. er eksluderet
m2 <- m[-which(m$bygget-m$salgsaar>=0 & m$pris<1500000),]
#subset data så 'my' kun indeholder koordinater og pris
my <- m2[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
#Omdøb til engelske navne
library(plyr)
my <- rename(my, c(adresse="Address", pris='Price', prischng='Price-reduction',adjprice='2014-price',kvm='Sq.meters', kr.kvm='Kr/sq.meters', dato='Sales date', bygget='Built', rum='Rooms', boligtype='Housing type'))
#fjern dubletter fra 'my' i kolonnen 'adresse'
dup <- my[!duplicated(my[,"Address"]),]
#Find percentiles i '2014-price'
quantile(dup$'2014-price', probs = c(0, 0.25, 0.75, 0.90, 1), na.rm = T)
#Lav en ny variabel baseret på percentile af 2014-price
dup$Percentile <- ifelse(dup$'2014-price'>= 0 & dup$'2014-price'<=996385, '0-25%', ifelse(dup$'2014-price'> 996385 & dup$'2014-price'<=1850000, '25-75%',ifelse(dup$'2014-price'>1850000 & dup$'2014-price'<=2342490, '75-90%',ifelse(dup$'2014-price'>2342490 & dup$'2014-price'<=18575000, '90-100%',0))))
#Find percentiles i 'adjsqmeterprice'
quantile(dup$adjsqmeterprice, probs = c(0, 0.25, 0.75, 0.90, 1), na.rm = T)
#Lav en ny variabel baseret på percentile af 2014-kr/sq.meters
dup$sqPercentile <- ifelse(dup$adjsqmeterprice>= 0 & dup$adjsqmeterprice<=7370, '0-25%', ifelse(dup$adjsqmeterprice> 7370 & dup$adjsqmeterprice<=12865, '25-75%',ifelse(dup$adjsqmeterprice>12865 & dup$adjsqmeterprice<=15895, '75-90%',ifelse(dup$adjsqmeterprice>15895 & dup$adjsqmeterprice<=132348, '90-100%',0))))
#####################################################################
#                                                                   #
#                 Number of sales per year                          #
#                                                                   #
#####################################################################
y <- data.frame(table(dup$salgsaar))
#Excluding year 2015
y1 <- y[1:23,]
library(ggplot2)
splot <- ggplot(y1, aes(x=Var1, y=Freq, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Antal boligsalg pr. år i 9230')+xlab('År')+ylab('Antal salg')+ theme(                                                                                                                                                 axis.text.x = element_text(angle=50, vjust=0.4))
splot
#Opret ny variable som udregner gennemsnitlig kvm pris for hvert år
#Lav først 2014-kr/sq.meters om til numerisk variable
dup$adjsqmeterprice <- as.numeric(dup$adjsqmeterprice)
#Udregn gennemsnitlig kvm pris for hvert år
avg <- aggregate( formula=adjsqmeterprice~salgsaar, data=dup, FUN=mean , na.rm=T)
#Excluding year 2015
avg1 <- avg[1:23,]
aplot <- ggplot(avg1, aes(x=salgsaar, y=adjsqmeterprice, group=1))+geom_line(size=0.7)+geom_point()+ggtitle('Gns. kr/kvm')+xlab('År')+ylab('kr/kvm -gns.')+theme(                                                                                                                                            axis.text.x = element_text(angle=50, vjust=0.4))+scale_x_continuous(breaks=c(1992:2014))+theme(panel.grid.minor.x = element_blank())
aplot
#####################################################################
#                                                                   #
#                 Subsetting to obtain building plots               #
#                                                                   #
#####################################################################
#
g <- m[which(m$bygget-m$salgsaar>=0 & m$pris<1500000),]
#fjern dubletter fra 'g' i kolonnen 'adresse'
g.dup <- g[!duplicated(g[,"adresse"]),]
#subset data så 'g.dup' kun indeholder koordinater og pris
g.dup <- g.dup[c('lat', 'long', 'adresse', 'pris','adjprice','prischng' , 'kvm', 'kr.kvm','adjsqmeterprice', 'dato','salgsaar', 'bygget', 'rum', 'boligtype')]
#Find percentiles i 'adjprice'
quantile(g.dup$adjprice, probs = c(0, 0.25, 0.75, 0.90, 1), na.rm = T)
#Lav en ny variabel baseret på percentile af adjprice
g.dup$Percentile <- ifelse(g.dup$adjprice>= 0 & g.dup$adjprice<=434894, '0-25%', ifelse(g.dup$adjprice> 434894 & g.dup$adjprice<=785233.8, '25-75%',ifelse(g.dup$adjprice>785233.8 & g.dup$adjprice<=959745.4, '75-90%',ifelse(g.dup$adjprice>959745.4 & g.dup$adjprice<=2024940, '90-100%',0))))
# store data in GeoJSON file (just a subset here)
g.dat <- toGeoJSON(data=g.dup[1:214,], dest=tempdir(), name="plot", overwrite =T)
# make style based on 2014-prices
g.style <- styleCat(prop="Percentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-prices",fill.alpha=0.7, rad=8)
# create map, remember to 'incl.data=TRUE' to embed on website
g.map <- leaflet(data=g.dat,size=c(700,500), dest=tempdir(), title="Byggegrunde svenstrup", base.map=list("osm",'mqsat', 'tls'), style=g.style, popup='*', incl.data=TRUE)
# view map in browser
g.map
#####################################################################
#                                                                   #
#                         Plotting maps                             #
#                                                                   #
#####################################################################
# store data in GeoJSON file (just a subset here)
m.dat <- toGeoJSON(data=dup[1:1345,], dest=tempdir(), name="sale", overwrite =T)
# make style based on percentile, 2014-prices
m.style <- styleCat(prop="Percentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-prices",fill.alpha=0.7, rad=8)
# create map, remember to 'incl.data=TRUE' to embed on website
m.map <- leaflet(data=m.dat,size=c(800,500), dest="C:/Users/mb.VHN/Documents", title="2014-price", base.map=list("osm"), style=m.style, popup='*', incl.data=TRUE)
# view map in browser
m.map
# make style based on kr/sq.meters, 2014-prices
m.style1 <- styleCat(prop="sqPercentile",val=c('0-25%', '25-75%', '75-90%', '90-100%') , style.val=rev(heat.colors(4)), leg="Percentile,2014-kr/sq.meters",fill.alpha=0.7, rad=8)
# create map, remember to 'incl.data=TRUE' to embed on website
m.map1 <- leaflet(data=m.dat,size=c(800,500), dest="C:/Users/mb.VHN/Documents", title="2014-price pr. sq.meter", base.map="osm", style=m.style1, popup='*', incl.data=TRUE)
# view map in browser
m.map1
#####################################################################
#                                                                   #
#                         Boxplots of cities                        #
#                                                                   #
#####################################################################
levels(m2$sognenavn)
box <- m2[m2$sognenavn=='Svenstrup'|m2$sognenavn=='Ferslev'|m2$sognenavn=='Godthåb'|m2$sognenavn=='Ellidshøj'|m2$sognenavn=='Dall',]
#Boxplot of each city in 9230
p2 <- ggplot(box, aes(x=factor(sognenavn), y=adjsqmeterprice))+ geom_boxplot()+stat_summary(fun.y=mean, geom="point", shape=5, size=4, color='red')+xlab('City')+ylab('2014-price pr. sq.meter, kr.')+ggtitle('Boxplots of each city in 9230')
p2
#Compute upper and lower whisker in order to remove outliers
ylim1 = boxplot.stats(box$adjsqmeterprice)$stats[c(1, 5)]
# scale y limits based on ylim1
p3 = p2 + coord_cartesian(ylim = ylim1*1.06)
p3
#Histogram of adjsqmeterprice
hist(box$adjsqmeterprice)
t.test(box$adjsqmeterprice)
library(devtools)
library(roxygen2)
install.packages("roxygen2")
library(roxygen2)
library(devtools)
install("boending")
setwd("C:/Users/Mads/Desktop/Personal R package/boending")
install("boending")
library(boending)
kilde
df <- data.frame(gp = factor(rep(letters[1:3], each = 10)), y = rnorm(30))
library(ggplot2)
myplot <- ggplot(df, aes(x = gp, y = y))+geom_point()
kilde(myplot, "test kilde")
??kilde
kilde(myplot, "test kilde")
